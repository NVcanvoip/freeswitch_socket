<?php
$dir = __DIR__;
$dir = str_replace("local_scripts", "", $dir);

include_once $dir . "/settings.php";
include_once $dir . "/db_connect.php";
include_once $dir . "/functions.php";
include_once $dir . "/fs_configuration/functions_vtpbx_fs.php";
include_once 'functions_local_scripts.php';
include_once 'functions_event_socket.php';

while (true)
{
  //1.  Get fifo list from FS
  $start_time = microtime(true);
  $password = "ClueCon"; // default
  $port = "8021"; // default
  $host = "127.0.0.1"; // default
  $fp = event_socket_create($host, $port, $password);
  $cmd = "api fifo list";

  //get list of queues from FS:
  $response = event_socket_request($fp, $cmd);
  echo json_encode($response);

  $xmlFIFOlist = simplexml_load_string($response);
  if ($xmlFIFOlist === false)
  {
    echo "Failed loading XML: ";
  }
  else
  {
    echo "Loaded XML!";
    foreach ($xmlFIFOlist->fifo as $fifo)
    {
      print_r($fifo);
      $name = $fifo["name"];
      $nameArray = explode("-FIFO-", $name);
      $queueDomainName = $nameArray[0];

      $queueID = 0;
      if (isset($nameArray[1])) $queueID = intval($nameArray[1]);

      // Continue only if domain is found and queue ID is > 0
      if ($queueDomainName != "" && $queueID > 0)
      {
        $queueDomainID = getDomainIDbyName($queueDomainName, $mysqli);

        $outboundArray = array();
        $callersArray = array();
        $consumersArray = array();
        $bridgesArray = array();

        $consumer_count = $fifo["consumer_count"];
        $caller_count = $fifo["caller_count"];
        $waiting_count = $fifo["waiting_count"];
        $outbound_strategy = $fifo["outbound_strategy"];
        $outbound_priority = $fifo["outbound_priority"];
        $ring_timeout = $fifo["ring_timeout"];

        $outboundMembers = $fifo
          ->outbound->member;
        $outboundMembersCount = 0;

        $outboundMembersArr = array();
        foreach ($outboundMembers as $member)
        {

          $mTimeout = intval($member["timeout"]);
          $mStatus = strval($member["status"]);

          $mStartTime = strval($member["start-time"]);
          $mStopTime = strval($member["stop-time"]);
          $mNextAvailable = strval($member["next-available"]);
          $mLoggedOnSince = strval($member["logged-on-since"]);

          $outboundMembersCount++;
          echo "member:" . $member . "   -  ";

          $memberUserDomain = explode("@", $member);

          $domain = $memberUserDomain[1]; // d1.vtpbx.com
          $userNotClean = $memberUserDomain[0];
          $userAndParams = explode("/", $userNotClean);

          $user = $userAndParams[1]; // 101
          $outboundArray[] = array(
            "user" => $user,
            "domain" => $domain,
            "timeout" => $mTimeout,
            "status" => $mStatus,
            "start-time" => $mStartTime,
            "stop-time" => $mStopTime,
            "next-available" => $mNextAvailable,
            "logged-on-since" => $mLoggedOnSince
          );

          echo "member:  [$user]@[$domain]  \r\n";
        }

        $fifoCallers = $fifo
          ->callers->caller;

        foreach ($fifoCallers as $caller)
        {
          $caller_callerID = strval($caller["caller_id_number"]);
          $caller_callerIDname = strval($caller["caller_id_name"]);
          $caller_status = strval($caller["status"]);
          $caller_position = strval($caller["position"]);
          $caller_timestamp = strval($caller["timestamp"]);
          $caller_uuid = strval($caller["uuid"]);
          $caller_slot = strval($caller["slot"]);

          echo "caller:" . $caller_callerID . "   -  $caller_status  \r\n";

          $callersArray[] = array(
            "position" => $caller_position,
            "uuid" => $caller_uuid,
            "caller_id_number" => $caller_callerID,
            "caller_id_name" => $caller_callerIDname,
            "status" => $caller_status,
            "timestamp" => $caller_timestamp,
            "slot" => $caller_slot
          );

        }

        $fifoConsumers = $fifo
          ->consumers->consumer;

        foreach ($fifoConsumers as $consumer)
        {
          $consumer_uuid = strval($consumer["uuid"]);
          $consumer_status = strval($consumer["status"]);
          $consumer_caller_id_name = strval($consumer["caller_id_name"]);
          $consumer_caller_id_number = strval($consumer["caller_id_number"]);
          $consumer_timestamp = strval($consumer["timestamp"]);

          $consumersArray[] = array(
            "uuid" => $consumer_uuid,
            "status" => $consumer_status,
            "caller_id_name" => $consumer_caller_id_name,
            "caller_id_number" => $consumer_caller_id_number,
            "timestamp" => $consumer_timestamp
          );

        }

        $fifoBridges = $fifo->bridges;
        print_r($fifoBridges);

        echo " =============================== \r\n ";
        foreach ($fifoBridges->bridge as $bridge)
        {

          print_r($bridge);

          $bridge_fifo_name = strval($bridge["fifo_name"]);
          $bridge_start_epoch = strval($bridge["bridge_start_epoch"]);

          // caller
          $caller = $bridge->caller;

          $bridge_caller_uuid = strval($bridge->caller["uuid"]);
          $bridge_caller_id_name = strval($bridge->caller["caller_id_name"]);
          $bridge_caller_id_number = strval($bridge->caller["caller_id_number"]);

          // consumer
          $bridge_consumer_uuid = strval($bridge
            ->consumer
            ->uuid);
          $bridge_consumer_outgoing_uuid = strval($bridge
            ->consumer
            ->outgoing_uuid);

          $bridgesArray[] = array(
            "fifo_name" => $bridge_fifo_name,
            "bridge_start_epoch" => $bridge_start_epoch,

            "caller_uuid" => $bridge_caller_uuid,
            "caller_id_name" => $bridge_caller_id_name,
            "caller_id_number" => $bridge_caller_id_number,
            "consumer_uuid" => $bridge_consumer_uuid,
            "consumer_outgoing_uuid" => $bridge_consumer_outgoing_uuid

          );

          // Update RT table, make sure the call is marked as ANSWERED
          setQueueCallAsAnswered($bridge_start_epoch, $bridge_caller_id_number, $bridge_caller_uuid, $queueID, $queueDomainID, $mysqli);

        }

        echo " =============================== \r\n ";
        echo "Queue [$name] , callers: [$caller_count], consumers: [$consumer_count], waiting: [$waiting_count], outbound members: [$outboundMembersCount]  \r\n ";

        $outboundArrayJson = json_encode($outboundArray);
        $callersArrayJson = json_encode($callersArray);
        $consumersArrayJson = json_encode($consumersArray);
        $bridgesArrayJson = json_encode($bridgesArray);

        saveQueuesRtData($queueDomainID, $queueID, $consumer_count, $caller_count, $waiting_count, $outbound_strategy, $outbound_priority, $ring_timeout, $outboundArrayJson, $callersArrayJson, $consumersArrayJson, $bridgesArrayJson, $mysqli);

      }

    } // DONE - loop over queues
    
  }

  // Done
  $end_time = microtime(true);
  $execTime = round((($end_time - $start_time) * 1000) , 3);

  // array prepared, need to update DB table.
  echo "loop exec time:[$execTime]ms \r\n";

  usleep(100000); // PAUSE 0.5s
  //break;
  // break;
  
}

?>

